// <auto-generated />
using System;
using MatFrem.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MatFrem.Migrations.AppDB
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250310011437_InitialDbContext")]
    partial class InitialDbContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DriverModel", b =>
                {
                    b.Property<int>("DriverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DriverID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DriverID");

                    b.ToTable("DriverModel");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.AdviceModel", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PostId"));

                    b.Property<string>("AdviceMessage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PostId");

                    b.ToTable("Advice");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderModelId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderModelOrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ShoppingCartModelShoppingCartID")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderModelId");

                    b.HasIndex("OrderModelOrderID")
                        .IsUnique();

                    b.HasIndex("ProductID");

                    b.HasIndex("ShoppingCartModelShoppingCartID");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.OrderModel", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerPhoneNr")
                        .HasColumnType("longtext");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("DeliveryFee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("DriverId")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("OrderCreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("OrderItem")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatusID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("longtext");

                    b.Property<string>("PickUpAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductCategories")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductGeoJson")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductNames")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("OrderID");

                    b.HasIndex("OrderStatusID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.OrderProducts", b =>
                {
                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("OrderMOrderID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductMProductID")
                        .HasColumnType("int");

                    b.HasKey("OrderID", "ProductID");

                    b.HasIndex("OrderMOrderID");

                    b.HasIndex("ProductMProductID");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.OrderStatus", b =>
                {
                    b.Property<int>("OrderStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrderStatusID"));

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("OrderStatusID");

                    b.ToTable("OrderState");

                    b.HasData(
                        new
                        {
                            OrderStatusID = 1,
                            StatusDescription = "Motatt"
                        },
                        new
                        {
                            OrderStatusID = 2,
                            StatusDescription = "Under behandling"
                        },
                        new
                        {
                            OrderStatusID = 3,
                            StatusDescription = "På vei"
                        },
                        new
                        {
                            OrderStatusID = 4,
                            StatusDescription = "Levert"
                        },
                        new
                        {
                            OrderStatusID = 5,
                            StatusDescription = "Order kansellert"
                        });
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.ProductModel", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("GeoJson")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductCalories")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductLocation")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("double");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int?>("ShoppingCartModelShoppingCartID")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("ShopId");

                    b.HasIndex("ShoppingCartModelShoppingCartID");

                    b.ToTable("Product_detail");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.ShopModel", b =>
                {
                    b.Property<int>("ShopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ShopID"));

                    b.Property<string>("ShopName")
                        .HasColumnType("longtext");

                    b.HasKey("ShopID");

                    b.ToTable("Shop_detail");

                    b.HasData(
                        new
                        {
                            ShopID = 1,
                            ShopName = "Kiwi"
                        },
                        new
                        {
                            ShopID = 2,
                            ShopName = "Rema 1000"
                        },
                        new
                        {
                            ShopID = 3,
                            ShopName = "Coop Mega"
                        },
                        new
                        {
                            ShopID = 4,
                            ShopName = "Coop Extra"
                        },
                        new
                        {
                            ShopID = 5,
                            ShopName = "Meny"
                        },
                        new
                        {
                            ShopID = 6,
                            ShopName = "Bunnpris"
                        },
                        new
                        {
                            ShopID = 7,
                            ShopName = "Spar"
                        },
                        new
                        {
                            ShopID = 8,
                            ShopName = "Joker"
                        },
                        new
                        {
                            ShopID = 9,
                            ShopName = "Obs!"
                        },
                        new
                        {
                            ShopID = 10,
                            ShopName = "Coop Prix"
                        });
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.ShoppingCartModel", b =>
                {
                    b.Property<int>("ShoppingCartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ShoppingCartID"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CartSize")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId")
                        .HasColumnType("longtext");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("DeliveryFee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("DriverId")
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductModelProductID")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ShoppingCartID");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ProductModelProductID");

                    b.ToTable("ShoppingCart");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.OrderItem", b =>
                {
                    b.HasOne("MatFrem.Models.DomainModel.OrderModel", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatFrem.Models.DomainModel.OrderModel", null)
                        .WithOne("OrderItemModel")
                        .HasForeignKey("MatFrem.Models.DomainModel.OrderItem", "OrderModelOrderID");

                    b.HasOne("MatFrem.Models.DomainModel.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatFrem.Models.DomainModel.ShoppingCartModel", null)
                        .WithMany("CartItems")
                        .HasForeignKey("ShoppingCartModelShoppingCartID");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.OrderModel", b =>
                {
                    b.HasOne("MatFrem.Models.DomainModel.OrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.OrderProducts", b =>
                {
                    b.HasOne("MatFrem.Models.DomainModel.OrderModel", "OrderM")
                        .WithMany()
                        .HasForeignKey("OrderMOrderID");

                    b.HasOne("MatFrem.Models.DomainModel.ProductModel", "ProductM")
                        .WithMany()
                        .HasForeignKey("ProductMProductID");

                    b.Navigation("OrderM");

                    b.Navigation("ProductM");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.ProductModel", b =>
                {
                    b.HasOne("MatFrem.Models.DomainModel.ShopModel", "ShopModelO")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatFrem.Models.DomainModel.ShoppingCartModel", null)
                        .WithMany("Product")
                        .HasForeignKey("ShoppingCartModelShoppingCartID");

                    b.Navigation("ShopModelO");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.ShoppingCartModel", b =>
                {
                    b.HasOne("MatFrem.Models.DomainModel.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("MatFrem.Models.DomainModel.ProductModel", "ProductModel")
                        .WithMany()
                        .HasForeignKey("ProductModelProductID");

                    b.Navigation("ApplicationUser");

                    b.Navigation("ProductModel");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.OrderModel", b =>
                {
                    b.Navigation("OrderItemModel");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("MatFrem.Models.DomainModel.ShoppingCartModel", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
