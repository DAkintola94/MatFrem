@using MatFrem.Models.ViewModel
@model IEnumerable<OrderViewModel>

<head>
    <script src="https://kit.fontawesome.com/5eea027e19.js" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <link rel="stylesheet"
          href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css" />
    <link rel="stylesheet"
          href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css" />
    <link rel="stylesheet"
          href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.Default.css" />

    <style>
        .map-column {
            display: flex;
            flex: 1;
        }

        #map {
            height: 800px;
            width: 100%;
        }
    </style>
</head>

<div class="map-column" style="flex: 1;">
    <div id="map"></div>
</div>


<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>
<script src="https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js"></script>
<script src="@("https://unpkg.com/@turf/turf@7.0.0/turf.min.js")"></script>


<script src="~/js/generateMarker.js"></script>
<script>
    @foreach (var orderData in Model)
    {
                @foreach (var jsonData in orderData.ViewGeoJson)
                {
                          @:generateMarkers(@orderData.OrderID, @Html.Raw(jsonData), "@orderData.OrderStatusDescription");
                }
    }

</script>
<!-- since the data from is being sent as a list from the server "controller", we can select specific what we want to manipulate like this -->
<!-- the function takes the parameter inserted here, which is orderData.OrderID, and the serialized geojson string -->
